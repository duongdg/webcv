//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebCV.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebCVEntities : DbContext
    {
        public WebCVEntities()
            : base("name=WebCVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Education> Educations { get; set; }
        public virtual DbSet<Experience> Experiences { get; set; }
        public virtual DbSet<Follow> Follows { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Profile> Profiles { get; set; }
        public virtual DbSet<Profile_Experience> Profile_Experience { get; set; }
        public virtual DbSet<Profile_Language> Profile_Language { get; set; }
        public virtual DbSet<Profile_Project> Profile_Project { get; set; }
        public virtual DbSet<Profile_Skill> Profile_Skill { get; set; }
        public virtual DbSet<Project> Projects { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Skill> Skills { get; set; }
        public virtual DbSet<Specialized> Specializeds { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<View_Profile> View_Profile { get; set; }
        public virtual DbSet<View_Profile_Experience> View_Profile_Experience { get; set; }
        public virtual DbSet<View_Profile_Follow> View_Profile_Follow { get; set; }
        public virtual DbSet<View_Profile_Language> View_Profile_Language { get; set; }
        public virtual DbSet<View_Profile_Project> View_Profile_Project { get; set; }
        public virtual DbSet<View_Profile_Skill> View_Profile_Skill { get; set; }
    
        public virtual int Admin_Login(string email, string passWord)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Admin_Login", emailParameter, passWordParameter);
        }
    
        public virtual ObjectResult<Count_Follow_Result> Count_Follow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Count_Follow_Result>("Count_Follow");
        }
    
        public virtual int Education_Insert(string educationName, Nullable<bool> status)
        {
            var educationNameParameter = educationName != null ?
                new ObjectParameter("EducationName", educationName) :
                new ObjectParameter("EducationName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Education_Insert", educationNameParameter, statusParameter);
        }
    
        public virtual int Experience_Insert(string experienceName, string ex_Date, string ex_Descreptiom, Nullable<bool> status)
        {
            var experienceNameParameter = experienceName != null ?
                new ObjectParameter("ExperienceName", experienceName) :
                new ObjectParameter("ExperienceName", typeof(string));
    
            var ex_DateParameter = ex_Date != null ?
                new ObjectParameter("Ex_Date", ex_Date) :
                new ObjectParameter("Ex_Date", typeof(string));
    
            var ex_DescreptiomParameter = ex_Descreptiom != null ?
                new ObjectParameter("Ex_Descreptiom", ex_Descreptiom) :
                new ObjectParameter("Ex_Descreptiom", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Experience_Insert", experienceNameParameter, ex_DateParameter, ex_DescreptiomParameter, statusParameter);
        }
    
        public virtual int Langauge_Insert(string languageName, Nullable<bool> status)
        {
            var languageNameParameter = languageName != null ?
                new ObjectParameter("LanguageName", languageName) :
                new ObjectParameter("LanguageName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Langauge_Insert", languageNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<Language_ListAll_Result> Language_ListAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Language_ListAll_Result>("Language_ListAll");
        }
    
        public virtual int Project_Insert(string projectName, string pr_Descreption, Nullable<bool> status)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var pr_DescreptionParameter = pr_Descreption != null ?
                new ObjectParameter("Pr_Descreption", pr_Descreption) :
                new ObjectParameter("Pr_Descreption", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Project_Insert", projectNameParameter, pr_DescreptionParameter, statusParameter);
        }
    
        public virtual int Role_Insert(string roleName, Nullable<bool> status)
        {
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Role_Insert", roleNameParameter, statusParameter);
        }
    
        public virtual int Skill_Insert(string skillName, Nullable<bool> status)
        {
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Skill_Insert", skillNameParameter, statusParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Specialized_Insert(string specializedName, Nullable<bool> status)
        {
            var specializedNameParameter = specializedName != null ?
                new ObjectParameter("SpecializedName", specializedName) :
                new ObjectParameter("SpecializedName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Specialized_Insert", specializedNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<Top3_Profile_Multil_Language_Result> Top3_Profile_Multil_Language()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Top3_Profile_Multil_Language_Result>("Top3_Profile_Multil_Language");
        }
    
        public virtual ObjectResult<Top6_Profile_Popular_Result> Top6_Profile_Popular()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Top6_Profile_Popular_Result>("Top6_Profile_Popular");
        }
    }
}
